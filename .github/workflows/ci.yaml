name: "Ansible and Terraform Workflow"

on:
  push:
    branches:
      - main
    # paths:
    #   - ansible/**
    #   - terraform/**
  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - terraform/**

permissions: write-all

env:
  TF_LOG: INFO

jobs:
  ansible-linting:
    name: "lint ansible project"
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v3

      # - name: Run ansible-lint
      #   uses: ansible-community/ansible-lint-action@v6.0.2
      #   with:
      #     args: "ansible"

  ansible:
    name: "execute ansible playbook"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./ansible
    needs:
      - ansible-linting

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v3

      - name: ZeroTier - Proxmox
        uses: jakoberpf/github-action-zerotier@main # zerotier/github-action@v1.0.1
        with:
          network_id: ${{ secrets.ZEROTIER_NETWORK_ID_PROXMOX }}
          auth_token: ${{ secrets.ZEROTIER_CENTRAL_TOKEN }}
          api_url: ${{ secrets.ZEROTIER_API_URL }}

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install ansible and dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
          if [ -f roles/requirements.yml ]; then ansible-galaxy install -r roles/requirements.yml --force; fi

      - name: Install ssh private keys
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: | # ${{ secrets.KNOWN_HOSTS }}
            172.30.119.142,ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDhUz23uyx1uCMECKaFKq17P558radzdN8pAEKclDnEM/duwTyVfSMrpuKjxRuQZ8oSyQJdbP5C6Q13EDopzh5nHnZrD6CbtPP8kIL+c2VEIAfndK31MrqIiyHs/g/2tJisWrOXOXXPcwAv7uA1+1BDSUMJTKNme4k0WAC0pjwEU7hcRe5WE73Vhc5JsTeiMb5+2PB+otmVVyhPUa2nFbrTlJPpRwmoO9sIHuf1smcgT8X5js98bQCOPyVGebbTSj8iMq832JQoOoYryJOsAllWSSEdiv/6gXFqoMD8+On3lFZGIy1bsjyqQtriqisEDXlNc5jQ5bVS6jQoV70mv8W1 root@backup
            172.30.119.190,compute-1 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCYGcfVxYUmzrHFr9VsTJd6XhONOSJnDUely8ZqZZBFdIGc5u/3RMf9DFvsgNVlrjvGT9yXQi9lCN447pV631SmWoBxQJWonaUF/WIIP4CxR5EEjl0+/SXmP7vfKx2K7nvu+aDwLsO9xO9pBZmtKmxX3SGENmtUyW9lEPytg2mJ+o9Tq4Lv4XJ8o7V6Cl1OJW+1n7OY1K+AqBJ06qZFoKw823julvX824HGkFX8BuH1QZrkpuqg3c0Yj8ZE4KYBqm9HOqIKFFAR/EBoo0oWWg6TuKmgSEpNE77PY5U0+UaIWJ0ZkGHW4K7tOOYRSPP/XRrQzg+h4y5LTDUXyEJBS6Lt root@compute-1
            172.30.119.87,compute-2 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCmaOq3RrSwtIctVLRfUjqT7LvmFfLfh7nybgusNiTeIHxKPfaZNUoecKcbf8GyfunD3XyuN3KMxGwV/qdPQzSP8LFojKYlGqLv+C56grS2vBLnpc4qRCZvizL6KTerIw6h5kKIkRPQk680r67iEQHyqVUuNYhGi/A8aulYIudTtNRoCRxPs+UomcMNLFz9xTSMYsuK5RNOwPe16/6bs05LdPR1DpWNtC/r8fAVhpmOJUZk2QkcQAA4mmMzGA3pwnha+CL5OXEU7bbTBxmjDahMyySrfxrlDgevb1Pl6CoOl18/udyA9M2hF5fG+4vYg6dvcQdUTe1n/ezKGy3DrdSb root@compute-2
            172.30.119.79,compute-3 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDCrCJiFjptA81NjpjvqiB31zeOdBQPqvlxH99uQoYdhJBb1Rxarnif+JnL0x156qzEaBZs0YzdWglJclmMsfLOl5/tlL+EEpSSGF+FYncPl6p94XINQ6XsnHIeyvBlm7coqgticVKHVSZB5iRnqhF7ySHTm0bYFw+7A65iaakIDoI7WFWck/jFEZ73lqMFsqwW/LVMLurcTxGI41/ZCtTPo48uwi2JMZdLmIKmZpT8qez/7Pa8sQmSXgmDwt8rToVvbR2LTM4YXPfFHrwZxHr6mraumam36E1mFetrlb5LXVa+tvZFXBDcvTxr13VIa1eR2rqOCAlaCZd8Way6rni5 root@compute-3
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)

      - name: Run ansible playbook
        run: |
          echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > .vault_pass
          ansible-playbook plays/main.yaml --vault-password-file .vault_pass

      # - name: Run playbook
      #   uses: dawidd6/action-ansible-playbook@v2
      #   with:
      #     playbook: plays/main.yml
      #     directory: ansible
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     inventory: |
      #       [all]
      #       glacier   ansible_host=172.30.119.142  ansible_user=root
      #       compute-1 ansible_host=172.30.119.190 ansible_user=root
      #       compute-2 ansible_host=172.30.119.87  ansible_user=root
      #       compute-3 ansible_host=172.30.119.79  ansible_user=root

      #       [compute]
      #       compute-1
      #       compute-2
      #       compute-3

      #       [storage]
      #       glacier
      #     # Optional, encrypted vault password
      #     vault_password: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
      #     # Optional, galaxy requirements filepath
      #     # requirements: galaxy-requirements.yml
      #     # Optional, additional flags to pass to ansible-playbook
      #     # options: |
      #     #   --inventory .hosts
      #     #   --limit group1
      #     #   --extra-vars hello=there
      #     #   --verbose

  terraform:
    name: "execute terraform project"
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - ansible
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Setup SOPS with binary installer
        uses: mdgreenwald/mozilla-sops-action@v1.4.1

      - name: Decrypt Terraform backend configuration with SOPS
        run: sops --decrypt backend.conf.enc > backend.conf
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::433082585283:role/github-oidc-terraform
          role-session-name: proxmox-cluster-pineapple
          aws-region: "eu-central-1" # ${{ env.AWS_REGION }}

      - name: Terraform init
        id: init
        run: terraform init -backend-config=backend.conf

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform scanning with checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./terraform
          framework: terraform

      # - name: Terraform plan
      #   id: plan
      #   if: github.event_name == 'pull_request'
      #   run: terraform plan -no-color -input=false
      #   continue-on-error: true

      # - uses: actions/github-script@v6
      #   if: github.event_name == 'pull_request'
      #   env:
      #     PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      #   with:
      #     script: |
      #       const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
      #       #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
      #       #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
      #       #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

      #       <details><summary>Show Plan</summary>

      #       \`\`\`\n
      #       ${process.env.PLAN}
      #       \`\`\`

      #       </details>
      #       *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       })

      # - name: Terraform Plan Status
      #   if: steps.plan.outcome == 'failure'
      #   run: exit 1

      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: terraform apply -auto-approve -input=false
